name: Coverage

on:
  push:
    branches: [main, release-*]
    paths-ignore:
      - "docs/**"
  pull_request:
    branches: [main]
    paths-ignore:
      - "docs/**"

env:
  CARGO_TERM_COLOR: always

jobs:
  coverage:
    runs-on: [self-hosted, linux]
    steps:
      - uses: actions/checkout@v4
      - run: rustup component add llvm-tools-preview
      - run: cargo install grcov
      - name: clean
        run: |
          cargo clean
          rm -rf ./target/debug/deps/gluesql*
          rm *.profraw && rm **/*.profraw
          cd storages/csv-storage && rm -rf ./tmp && cd ../..
          cd storages/json-storage && rm -rf ./tmp && cd ../..
          redis-cli flushall
      - name: build
        env:
          RUSTFLAGS: -Cinstrument-coverage
        run: cargo build --verbose
      - name: test
        env:
          RUSTFLAGS: -Cinstrument-coverage
          LLVM_PROFILE_FILE: gluesql-%p-%m.profraw
          GIT_REMOTE: https://x-access-token:${{ secrets.GITHUB_TOKEN }}@github.com/${{ github.repository }}
        run: GIT_REMOTE=$GIT_REMOTE cargo test --all-features --verbose
      - name: Run grcov
        run: |
          mkdir coverage
          grcov . \
            --binary-path ./target/debug/ \
            -s . \
            -t lcov \
            --branch \
            --ignore-not-existing \
            --ignore "/*" \
            --ignore "pkg/rust/examples/*.rs" \
            --ignore "cli/src/{cli,helper,lib,main}.rs" \
            --excl-line "(#\\[derive\\()|(^\s*.await[;,]?$)|(^test_case\!\([\d\w]+,)" \
            -o ./coverage/lcov.info
      - name: Set coverage env vars
        run: |
          echo "COMMIT_SHA=${{ github.sha }}" >> $GITHUB_ENV
          if [ "${{ github.event_name }}" = "pull_request" ]; then
            echo "PR_NUMBER=${{ github.event.pull_request.number }}" >> $GITHUB_ENV
          fi
      - name: Clone gluesql.org
        if: ${{ github.event_name == 'pull_request' || (github.event_name == 'push' && github.ref_name == 'main') }}
        run: git clone https://github.com/gluesql/gluesql.github.io.git && cd gluesql.github.io && git checkout gh-pages
      - name: Compress and copy coverage report (PR)
        if: ${{ github.event_name == 'pull_request' }}
        run: |
          mkdir -p gluesql.github.io/coverage/pr/$PR_NUMBER
          xz -T0 -9e -c coverage/lcov.info > gluesql.github.io/coverage/pr/$PR_NUMBER/lcov.info.xz
      - name: Compress and copy coverage report (main)
        if: ${{ github.event_name == 'push' && github.ref_name == 'main' }}
        run: |
          mkdir -p gluesql.github.io/coverage/main/$COMMIT_SHA
          xz -T0 -9e -c coverage/lcov.info > gluesql.github.io/coverage/main/$COMMIT_SHA/lcov.info.xz
      - name: Commit and push coverage (PR)
        if: ${{ github.event_name == 'pull_request' }}
        run: |
          cd gluesql.github.io
          git add coverage/pr/$PR_NUMBER/lcov.info.xz
          git commit -m "Coverage: PR$PR_NUMBER@$COMMIT_SHA"
          git push https://panarch:${{ secrets.GLUESQL_ORG }}@github.com/gluesql/gluesql.github.io.git gh-pages
      - name: Commit and push coverage (main)
        if: ${{ github.event_name == 'push' && github.ref_name == 'main' }}
        run: |
          cd gluesql.github.io
          git add coverage/main/$COMMIT_SHA/lcov.info.xz
          git commit -m "Coverage: main@$COMMIT_SHA"
          git push https://panarch:${{ secrets.GLUESQL_ORG }}@github.com/gluesql/gluesql.github.io.git gh-pages
      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v5
        with:
          files: ./coverage/lcov.info
          token: ${{ secrets.CODECOV_TOKEN }}
          flags: rust
          fail_ci_if_error: true
      - name: Coveralls
        continue-on-error: true
        uses: coverallsapp/github-action@master
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
