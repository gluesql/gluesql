name: Coverage

on:
  push:
    branches: [main, release-*]
    paths-ignore:
      - "docs/**"
  pull_request:
    branches: [main]
    paths-ignore:
      - "docs/**"

env:
  CARGO_TERM_COLOR: always

jobs:
  coverage:
    runs-on: [self-hosted, linux]
    steps:
      - uses: actions/checkout@v4
      - run: rustup component add llvm-tools-preview
      - run: cargo install grcov
      - name: clean
        run: |
          cargo clean
          rm -rf ./target/debug/deps/gluesql*
          rm *.profraw && rm **/*.profraw
          cd storages/csv-storage && rm -rf ./tmp && cd ../..
          cd storages/json-storage && rm -rf ./tmp && cd ../..
          redis-cli flushall
      - name: build
        env:
          RUSTFLAGS: -Cinstrument-coverage
        run: cargo build --verbose
      - name: test
        env:
          RUSTFLAGS: -Cinstrument-coverage
          LLVM_PROFILE_FILE: gluesql-%p-%m.profraw
          GIT_REMOTE: https://x-access-token:${{ secrets.GITHUB_TOKEN }}@github.com/${{ github.repository }}
        run: GIT_REMOTE=$GIT_REMOTE cargo test --all-features --verbose
      - name: Run grcov
        run: |
          mkdir coverage
          grcov . \
            --binary-path ./target/debug/ \
            -s . \
            -t lcov \
            --branch \
            --ignore-not-existing \
            --ignore "/*" \
            --ignore "pkg/rust/examples/*.rs" \
            --ignore "cli/src/{cli,helper,lib,main}.rs" \
            --excl-line "(#\\[derive\\()|(^\s*.await[;,]?$)|(^test_case\!\([\d\w]+,)" \
            -o ./coverage/lcov.info
      - name: Set coverage env vars
        run: |
          if [ "${{ github.event_name }}" = "pull_request" ]; then
            echo "COMMIT_SHA=${{ github.event.pull_request.head.sha }}" >> $GITHUB_ENV
          else
            echo "COMMIT_SHA=${{ github.sha }}" >> $GITHUB_ENV
          fi
          echo "BRANCH_NAME=$(echo ${{ github.ref_name }} | tr '/' '-')" >> $GITHUB_ENV
          echo "TIMESTAMP=$(date -u +%Y-%m-%dT%H:%M:%SZ)" >> $GITHUB_ENV
      - name: Compress coverage report
        run: xz -T0 -9e -c coverage/lcov.info > coverage/lcov.info.xz
      - name: Upload coverage artifact
        uses: actions/upload-artifact@v4
        with:
          name: coverage-${{ env.BRANCH_NAME }}-${{ env.COMMIT_SHA }}
          path: coverage/lcov.info.xz
      - name: Publish PR coverage to gluesql.github.io
        if: ${{ github.repository == 'gluesql/gluesql' && github.event_name == 'pull_request' }}
        run: |
          gh repo clone gluesql/gluesql.github.io
          cd gluesql.github.io
          git checkout gh-pages

          # Copy coverage report
          mkdir -p coverage/pr/${{ github.event.pull_request.number }}
          cp ../coverage/lcov.info.xz coverage/pr/${{ github.event.pull_request.number }}/${TIMESTAMP}.${COMMIT_SHA}.lcov.info.xz

          # Commit and push
          git add coverage/pr/${{ github.event.pull_request.number }}/${TIMESTAMP}.${COMMIT_SHA}.lcov.info.xz
          git commit -m "Coverage: PR#${{ github.event.pull_request.number }}@$COMMIT_SHA"
          git push
      - name: Comment coverage link on PR
        if: ${{ github.repository == 'gluesql/gluesql' && github.event_name == 'pull_request' }}
        env:
          PR_NUMBER: ${{ github.event.pull_request.number }}
        run: |
          ENCODED_TIMESTAMP=${TIMESTAMP//:/%3A}
          URL="https://gluesql.org/coverage/?path=pr/$PR_NUMBER/$ENCODED_TIMESTAMP.${COMMIT_SHA}.lcov.info.xz"
          MESSAGE=$(cat <<EOF
            ### Coverage Report

            - **Commit:** \`$COMMIT_SHA\`
            - **Timestamp:** \`$TIMESTAMP\`
            - **Report:** [View report]($URL)
          EOF
          )
          gh pr comment "$PR_NUMBER" --body "$MESSAGE"
      - name: Publish coverage to gluesql.github.io
        if: ${{ github.repository == 'gluesql/gluesql' && github.event_name == 'push' && github.ref == 'refs/heads/main' }}
        run: |
          # Clone docs repo
          gh repo clone gluesql/gluesql.github.io
          cd gluesql.github.io
          git checkout gh-pages

          # Copy coverage report
          mkdir -p coverage/main
          cp ../coverage/lcov.info.xz coverage/main/${TIMESTAMP}.${COMMIT_SHA}.lcov.info.xz

          # Commit and push
          git add coverage/main/${TIMESTAMP}.${COMMIT_SHA}.lcov.info.xz
          git commit -m "Coverage: main@$COMMIT_SHA"
          git push
      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v5
        with:
          files: ./coverage/lcov.info
          token: ${{ secrets.CODECOV_TOKEN }}
          flags: rust
          fail_ci_if_error: true
      - name: Coveralls
        continue-on-error: true
        uses: coverallsapp/github-action@master
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
