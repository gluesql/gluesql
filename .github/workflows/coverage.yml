name: Coverage

on:
  push:
    branches: [main, release-*]
    paths-ignore:
      - "docs/**"
  pull_request:
    branches: [main]
    paths-ignore:
      - "docs/**"

env:
  CARGO_TERM_COLOR: always

jobs:
  coverage:
    runs-on: ubuntu-latest
    env:
      COMMIT_SHA: ${{ github.event.pull_request.head.sha || github.sha }}
    services:
      redis:
        image: redis
        ports:
          - 6379:6379
      mongo:
        image: mongo
        ports:
          - 27017:27017
    steps:
      - uses: actions/checkout@v4
      - name: Configure git user
        run: |
          git config --global user.email "ci@example.com"
          git config --global user.name "CI"
      - run: rustup component add llvm-tools-preview
      - run: cargo install grcov
      - name: clean
        run: |
          cargo clean
          find . -name '*.profraw' -delete
          rm -rf storages/csv-storage/tmp
          rm -rf storages/json-storage/tmp
      - name: build
        env:
          RUSTFLAGS: -Cinstrument-coverage
        run: cargo build --verbose
      - name: test
        env:
          RUSTFLAGS: -Cinstrument-coverage
          LLVM_PROFILE_FILE: gluesql-%p-%m.profraw
          GIT_REMOTE: https://x-access-token:${{ secrets.GITHUB_TOKEN }}@github.com/${{ github.repository }}
        run: GIT_REMOTE=$GIT_REMOTE cargo test --all-features --verbose
      - name: Run grcov
        run: |
          mkdir coverage
          grcov . \
            --binary-path ./target/debug/ \
            -s . \
            -t lcov \
            --branch \
            --ignore-not-existing \
            --ignore "/*" \
            --ignore "pkg/rust/examples/*.rs" \
            --ignore "cli/src/{cli,helper,lib,main}.rs" \
            --excl-line "(#\\[derive\\()|(^\s*.await[;,]?$)|(^test_case\!\([\d\w]+,)" \
            -o ./coverage/lcov.info
      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v5
        with:
          files: ./coverage/lcov.info
          token: ${{ secrets.CODECOV_TOKEN }}
          flags: rust
          fail_ci_if_error: true
      - name: Coveralls
        continue-on-error: true
        uses: coverallsapp/github-action@master
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
      - name: Compress coverage report
        run: xz -T0 -9e -c coverage/lcov.info > coverage/lcov.info.xz
      - name: Set timestamp
        run: echo "TIMESTAMP=$(date -u +'%Y-%m-%dT%H%M%SZ')" >> $GITHUB_ENV
      - name: Create GitHub App token
        if: github.repository == 'gluesql/gluesql' && github.event_name == 'push' && github.ref == 'refs/heads/main'
        id: app-token
        uses: actions/create-github-app-token@v1
        with:
          app-id: ${{ secrets.COVERAGE_APP_ID }}
          installation-id: ${{ secrets.COVERAGE_APP_INSTALLATION_ID }}
          private-key: ${{ secrets.COVERAGE_APP_PRIVATE_KEY }}
          owner: gluesql
          repositories: gluesql, gluesql.github.io
      - name: Publish coverage to gluesql.github.io
        if: github.repository == 'gluesql/gluesql' && github.event_name == 'push' && github.ref == 'refs/heads/main'
        run: |
          git clone https://github.com/gluesql/gluesql.github.io.git
          cd gluesql.github.io
          git checkout gh-pages
          mkdir -p coverage/main
          cp ../coverage/lcov.info.xz coverage/main/${TIMESTAMP}.${COMMIT_SHA}.lcov.info.xz
          git add coverage/main/${TIMESTAMP}.${COMMIT_SHA}.lcov.info.xz
          git commit -m "Coverage: main@${COMMIT_SHA}"
          git push https://x-access-token:${{ steps.app-token.outputs.token }}@github.com/gluesql/gluesql.github.io.git
      - name: Upload coverage artifact
        uses: actions/upload-artifact@v4
        with:
          name: coverage
          path: coverage/lcov.info.xz
