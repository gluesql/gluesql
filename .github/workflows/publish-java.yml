name: Publish Java

on:
  push:

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

env:
  CARGO_INCREMENTAL: 0
  CARGO_NET_RETRY: 10
  CARGO_TERM_COLOR: always
  RUSTUP_MAX_RETRIES: 10

jobs:
  build-natives:
    name: Build Native Libraries
    strategy:
      fail-fast: false
      matrix:
        include:
          - os: ubuntu-latest
            target: x86_64-unknown-linux-gnu
            platform: linux-x86-64
            extension: so
          - os: macos-13
            target: x86_64-apple-darwin
            platform: darwin-x86-64
            extension: dylib
          - os: macos-latest
            target: aarch64-apple-darwin
            platform: darwin-aarch64
            extension: dylib
          - os: windows-latest
            target: x86_64-pc-windows-msvc
            platform: win32-x86-64
            extension: dll

    runs-on: ${{ matrix.os }}

    steps:
      - uses: actions/checkout@v4
        with:
          ref: ${{ inputs.sha }}

      - name: Set up Rust
        uses: dtolnay/rust-toolchain@stable
        with:
          targets: ${{ matrix.target }}

      - name: Cache Rust dependencies
        uses: actions/cache@v4
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            target
          key: ${{ runner.os }}-${{ matrix.target }}-cargo-${{ hashFiles('**/Cargo.lock') }}

      - name: Build native library
        working-directory: pkg/java
        run: cargo build --release --target ${{ matrix.target }}

      - name: Prepare artifact (Unix)
        if: runner.os != 'Windows'
        working-directory: target/${{ matrix.target }}/release
        run: |
          mkdir -p artifact/${{ matrix.platform }}
          cp libgluesql_java.${{ matrix.extension }} artifact/${{ matrix.platform }}/

      - name: Prepare artifact (Windows)
        if: runner.os == 'Windows'
        working-directory: target/${{ matrix.target }}/release
        shell: pwsh
        run: |
          New-Item -ItemType Directory -Force -Path artifact/${{ matrix.platform }}
          Copy-Item gluesql_java.${{ matrix.extension }} artifact/${{ matrix.platform }}/

      - name: Upload native library
        uses: actions/upload-artifact@v4
        with:
          name: native-${{ matrix.platform }}
          path: target/${{ matrix.target }}/release/artifact/${{ matrix.platform }}/*
          retention-days: 1

  build-and-publish:
    name: Build and Publish JAR
    needs: build-natives
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4
        with:
          ref: ${{ inputs.sha }}

      - name: Set up Java
        uses: actions/setup-java@v4
        with:
          java-version: '11'
          distribution: 'temurin'

      - name: Set up Rust
        uses: dtolnay/rust-toolchain@stable

      - name: Cache Gradle dependencies
        uses: actions/cache@v4
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}

      - name: Download all native libraries
        uses: actions/download-artifact@v4
        with:
          path: downloaded-artifacts
          pattern: native-*

      - name: Organize native libraries
        run: |
          mkdir -p pkg/java/src/main/resources/natives
          # Move each platform's artifact to correct location
          for artifact_dir in downloaded-artifacts/native-*; do
            platform=$(basename "$artifact_dir" | sed 's/^native-//')
            echo "Processing platform: $platform"
            mkdir -p "pkg/java/src/main/resources/natives/$platform"
            cp -v "$artifact_dir"/* "pkg/java/src/main/resources/natives/$platform/"
          done

      - name: List downloaded artifacts
        run: |
          echo "Native libraries:"
          ls -R pkg/java/src/main/resources/natives/

      - name: Make gradlew executable
        run: chmod +x pkg/java/gradlew

      - name: Generate UniFFI bindings
        working-directory: pkg/java
        run: |
          cargo build
          ./gradlew generateBindings

      - name: Build JAR
        working-directory: pkg/java
        run: ./gradlew build -x test

      - name: List JAR contents
        working-directory: pkg/java/build/libs
        run: |
          echo "JAR contents:"
          jar tf gluesql-*.jar | grep natives || echo "No natives found in JAR"

      - name: Upload JAR artifact
        uses: actions/upload-artifact@v4
        with:
          name: gluesql-jar
          path: pkg/java/build/libs/*.jar

  test-fat-jar:
    name: Test Fat JAR on ${{ matrix.platform }}
    needs: build-and-publish
    strategy:
      fail-fast: false
      matrix:
        include:
          - os: ubuntu-latest
            platform: Linux x86-64
          - os: macos-13
            platform: macOS Intel
          - os: macos-latest
            platform: macOS ARM
          - os: windows-latest
            platform: Windows x86-64

    runs-on: ${{ matrix.os }}

    steps:
      - uses: actions/checkout@v4

      - name: Set up Java
        uses: actions/setup-java@v4
        with:
          java-version: '11'
          distribution: 'temurin'

      - name: Download JAR
        uses: actions/download-artifact@v4
        with:
          name: gluesql-jar
          path: jar/

      - name: List JAR contents
        shell: bash
        run: |
          echo "=== JAR Contents - Natives ==="
          jar tf jar/gluesql-*.jar | grep natives || echo "No natives found"

      - name: Check platform-specific library
        shell: bash
        run: |
          echo "=== Checking Platform-Specific Library ==="
          echo "OS: ${{ runner.os }}"
          echo "Platform: ${{ matrix.platform }}"

          case "${{ runner.os }}" in
            Linux)
              echo "Expected: natives/linux-x86-64/libgluesql_java.so"
              jar tf jar/gluesql-*.jar | grep "natives/linux-x86-64/libgluesql_java.so" && echo "✓ Found" || echo "✗ NOT FOUND"
              ;;
            macOS)
              if [[ "$(uname -m)" == "arm64" ]]; then
                echo "Expected: natives/darwin-aarch64/libgluesql_java.dylib"
                jar tf jar/gluesql-*.jar | grep "natives/darwin-aarch64/libgluesql_java.dylib" && echo "✓ Found" || echo "✗ NOT FOUND"
              else
                echo "Expected: natives/darwin-x86-64/libgluesql_java.dylib"
                jar tf jar/gluesql-*.jar | grep "natives/darwin-x86-64/libgluesql_java.dylib" && echo "✓ Found" || echo "✗ NOT FOUND"
              fi
              ;;
            Windows)
              echo "Expected: natives/win32-x86-64/gluesql_java.dll"
              jar tf jar/gluesql-*.jar | grep "natives/win32-x86-64/gluesql_java.dll" && echo "✓ Found" || echo "✗ NOT FOUND"
              ;;
          esac

      - name: Set up Rust
        uses: dtolnay/rust-toolchain@stable

      - name: Make gradlew executable (Unix)
        if: runner.os != 'Windows'
        run: chmod +x pkg/java/gradlew

      - name: Run all tests on ${{ matrix.platform }}
        working-directory: pkg/java
        run: ./gradlew test

      - name: Test summary
        if: always()
        run: |
          echo "=== Test Summary for ${{ matrix.platform }} ==="
          echo "Platform: ${{ matrix.platform }}"
          echo "Java Version:"
          java -version
