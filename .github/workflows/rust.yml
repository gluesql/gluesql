name: Rust

on:
  push:
    branches: [main, run_job_parallel]
  pull_request:
    branches: [main]

env:
  CARGO_TERM_COLOR: always

jobs:
  clippy_core:
    name: Clippy (core)
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Add clippy
        uses: actions-rs/toolchain@v1.0.6
        with:
          profile: minimal
          default: true
          components: clippy
      - run: |
          cd core
          cargo clippy --no-default-features -- -D warnings
          cargo clippy --no-default-features --features metadata -- -D warnings
          cargo clippy --no-default-features --features alter-table -- -D warnings
          cargo clippy --no-default-features --features index -- -D warnings
          cargo clippy --no-default-features --features transaction -- -D warnings
          cargo clippy --no-default-features --features "alter-table index" -- -D warnings
          cargo clippy --no-default-features --features "alter-table transaction" -- -D warnings
          cargo clippy --no-default-features --features "index transaction" -- -D warnings
          cargo clippy --no-default-features --features "alter-table index transaction" -- -D warnings
          cargo clippy --all-features --all-targets -- -D warnings
          cd ../
  
  rust_fmt:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Add rustfmt
        uses: actions-rs/toolchain@v1.0.6
        with:
          profile: minimal
          default: true
          components: rustfmt
      - run: |
          cargo fmt -- --check
  
  rust_build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - run: cargo build --all-features --verbose

  gluesql_js_build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Set up node              
        uses: actions/setup-node@v3
        with:
          node-version: 16
      - name: Set up wasm pack
        uses: jetli/wasm-pack-action@v0.3.0
      - run: |
          cd gluesql-js/web
          yarn install
          yarn build
          cd ../../
  
  run_tests:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - run: |
          cargo test --no-default-features --verbose
          cargo test --all-features --all-targets --verbose
  
  run_examples:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - run: |
          cargo run --package gluesql --example hello_world
          cargo run --package gluesql --example api_usage
          cargo run --package gluesql --example sled_multi_threaded
          cargo run --package gluesql --example using_config


